<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.UserMapper">
    <!-- 对应字段的映射 -->
    <resultMap id="UserResultMap" type="com.example.entity.User">
        <result property="userId" column="user_id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="role" column="role"/>
        <result property="companyName" column="company_name"/>
        <result property="phoneNumber" column="phone_number"/>
        <result property="createdAt" column="created_at"/>
        <result property="isActive" column="is_active"/>
        <result property="processedAt" column="processed_at"/>
        <result property="processedBy" column="processed_by"/>
    </resultMap>

    <resultMap id="UserInfoResultMap" type="com.example.model.UserInfo">
        <result property="userId" column="user_id"/>
        <result property="username" column="username"/>
        <result property="role" column="role"/>
        <result property="companyName" column="company_name"/>
        <result property="phoneNumber" column="phone_number"/>
        <result property="createdAt" column="created_at"/>
        <result property="isActive" column="is_active"/>
        <result property="processedAt" column="processed_at"/>
        <result property="processedBy" column="processed_by"/>
    </resultMap>

    <!-- 获取所有用户信息 -->
    <select id="selectAllUsersInfo" resultMap="UserInfoResultMap">
        SELECT user_id, username, role, company_name, phone_number, created_at, is_active, processed_at, processed_by
        FROM users
    </select>

    <!-- 根据角色获取用户信息 -->
    <select id="selectUsersInfoByRole" resultMap="UserInfoResultMap">
        SELECT user_id, username, role, company_name, phone_number, created_at, is_active, processed_at, processed_by
        FROM users
        WHERE role = #{role}
    </select>

    <!-- 根据用户名获取用户 -->
    <select id="selectUserByUsername" resultMap="UserResultMap">
        SELECT user_id, username, password, role, company_name, phone_number, created_at, is_active, processed_at, processed_by
        FROM users
        WHERE username = #{username}
    </select>

    <!-- 根据用户名获取用户信息 -->
    <select id="selectUserInfoByUsername" resultMap="UserInfoResultMap">
        SELECT user_id, username, role, company_name, phone_number, created_at, is_active, processed_at, processed_by
        FROM users
        WHERE username = #{username}
    </select>

    <!-- 根据用户ID获取用户 -->
    <select id="selectUserByUserId" resultMap="UserResultMap">
        SELECT user_id, username, password, role, company_name, phone_number, created_at, is_active, processed_at, processed_by
        FROM users
        WHERE user_id = #{userId}
    </select>

    <!-- 根据用户ID获取用户信息 -->
    <select id="selectUserInfoByUserId" resultMap="UserInfoResultMap">
        SELECT user_id, username, role, company_name, phone_number, created_at, is_active, processed_at, processed_by
        FROM users
        WHERE user_id = #{userId}
    </select>

    <!-- 插入用户 -->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO users (user_id, username, password, role, company_name, phone_number)
        VALUES (
            NEXT VALUE FOR
            <choose>
                <when test="role.name() == 'ROOT'">root_seq</when>
                <when test="role.name() == 'ADMIN'">admin_seq</when>
                <when test="role.name() == 'STAFF'">staff_seq</when>
                <when test="role.name() == 'CLIENT'">client_seq</when>
            </choose>,
            #{username}, #{password}, #{role}, #{companyName}, #{phoneNumber}
        )
    </insert>

    <!-- 冻结 / 解冻 用户 -->
    <update id="toggleUserStatus">
        UPDATE users
        SET is_active = NOT is_active, processed_at = CURRENT_TIMESTAMP, processed_by = #{adminId}
        WHERE user_id = #{userId}
    </update>

    <!-- 更新用户信息 -->
    <update id="updateUerInfo">
        UPDATE users
        SET username = #{username}, company_name = #{companyName}, phone_number = #{phoneNumber}
        WHERE user_id = #{userId}
    </update>

    <!-- 修改密码 -->
    <update id="changeUserPassword">
        UPDATE users
        SET password = #{password}
        WHERE user_id = #{userId}
    </update>
</mapper>